{
  "version": 3,
  "sources": ["../../react-fast-marquee/src/components/Marquee.tsx"],
  "sourcesContent": ["import React, {\n  Fragment,\n  useEffect,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  ReactNode,\n  CSSProperties,\n  FC,\n  forwardRef,\n  Children,\n  MutableRefObject,\n  RefAttributes,\n} from \"react\";\nimport \"./Marquee.scss\";\n\ntype MarqueeProps = {\n  /**\n   * @description Inline style for the container div\n   * @type {CSSProperties}\n   * @default {}\n   */\n  style?: CSSProperties;\n  /**\n   * @description Class name to style the container div\n   * @type {string}\n   * @default \"\"\n   */\n  className?: string;\n  /**\n   * @description Whether to automatically fill blank space in the marquee with copies of the children or not\n   * @type {boolean}\n   * @default false\n   */\n  autoFill?: boolean;\n  /**\n   * @description Whether to play or pause the marquee\n   * @type {boolean}\n   * @default true\n   */\n  play?: boolean;\n  /**\n   * @description Whether to pause the marquee when hovered\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * @description Whether to pause the marquee when clicked\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * @description The direction the marquee is sliding\n   * @type {\"left\" | \"right\" | \"up\" | \"down\"}\n   * @default \"left\"\n   */\n  direction?: \"left\" | \"right\" | \"up\" | \"down\";\n  /**\n   * @description Speed calculated as pixels/second\n   * @type {number}\n   * @default 50\n   */\n  speed?: number;\n  /**\n   * @description Duration to delay the animation after render, in seconds\n   * @type {number}\n   * @default 0\n   */\n  delay?: number;\n  /**\n   * @description The number of times the marquee should loop, 0 is equivalent to infinite\n   * @type {number}\n   * @default 0\n   */\n  loop?: number;\n  /**\n   * @description Whether to show the gradient or not\n   * @type {boolean}\n   * @default false\n   */\n  gradient?: boolean;\n  /**\n   * @description The color of the gradient\n   * @type {string}\n   * @default \"white\"\n   */\n  gradientColor?: string;\n  /**\n   * @description The width of the gradient on either side\n   * @type {number | string}\n   * @default 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * @description A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * @type {() => void}\n   * @default null\n   */\n  onFinish?: () => void;\n  /**\n   * @description A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * @type {() => void}\n   * @default null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * @description: A callback function that is invoked once the marquee has finished mounting. It can be utilized to recalculate the page size, if necessary.\n   * @type {() => void}\n   * @default null\n   */\n  onMount?: () => void;\n  /**\n   * @description The children rendered inside the marquee\n   * @type {ReactNode}\n   * @default null\n   */\n  children?: ReactNode;\n} & RefAttributes<HTMLDivElement>;\n\nconst Marquee: FC<MarqueeProps> = forwardRef(function Marquee(\n  {\n    style = {},\n    className = \"\",\n    autoFill = false,\n    play = true,\n    pauseOnHover = false,\n    pauseOnClick = false,\n    direction = \"left\",\n    speed = 50,\n    delay = 0,\n    loop = 0,\n    gradient = false,\n    gradientColor = \"white\",\n    gradientWidth = 200,\n    onFinish,\n    onCycleComplete,\n    onMount,\n    children,\n  },\n  ref\n) {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [multiplier, setMultiplier] = useState(1);\n  const [isMounted, setIsMounted] = useState(false);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const containerRef = (ref as MutableRefObject<HTMLDivElement>) || rootRef;\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  // Calculate width of container and marquee and set multiplier\n  const calculateWidth = useCallback(() => {\n    if (marqueeRef.current && containerRef.current) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const marqueeRect = marqueeRef.current.getBoundingClientRect();\n      let containerWidth = containerRect.width;\n      let marqueeWidth = marqueeRect.width;\n\n      // Swap width and height if direction is up or down\n      if (direction === \"up\" || direction === \"down\") {\n        containerWidth = containerRect.height;\n        marqueeWidth = marqueeRect.height;\n      }\n\n      if (autoFill && containerWidth && marqueeWidth) {\n        setMultiplier(\n          marqueeWidth < containerWidth\n            ? Math.ceil(containerWidth / marqueeWidth)\n            : 1\n        );\n      } else {\n        setMultiplier(1);\n      }\n\n      setContainerWidth(containerWidth);\n      setMarqueeWidth(marqueeWidth);\n    }\n  }, [autoFill, containerRef, direction]);\n\n  // Calculate width and multiplier on mount and on window resize\n  useEffect(() => {\n    if (!isMounted) return;\n\n    calculateWidth();\n    if (marqueeRef.current && containerRef.current) {\n      const resizeObserver = new ResizeObserver(() => calculateWidth());\n      resizeObserver.observe(containerRef.current);\n      resizeObserver.observe(marqueeRef.current);\n      return () => {\n        if (!resizeObserver) return;\n        resizeObserver.disconnect();\n      };\n    }\n  }, [calculateWidth, containerRef, isMounted]);\n\n  // Recalculate width when children change\n  useEffect(() => {\n    calculateWidth();\n  }, [calculateWidth, children]);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Runs the onMount callback, if it is a function, when Marquee is mounted.\n  useEffect(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  }, []);\n\n  // Animation duration\n  const duration = useMemo(() => {\n    if (autoFill) {\n      return (marqueeWidth * multiplier) / speed;\n    } else {\n      return marqueeWidth < containerWidth\n        ? containerWidth / speed\n        : marqueeWidth / speed;\n    }\n  }, [autoFill, containerWidth, marqueeWidth, multiplier, speed]);\n\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      [\"--pause-on-hover\" as string]:\n        !play || pauseOnHover ? \"paused\" : \"running\",\n      [\"--pause-on-click\" as string]:\n        !play || (pauseOnHover && !pauseOnClick) || pauseOnClick\n          ? \"paused\"\n          : \"running\",\n      [\"--width\" as string]:\n        direction === \"up\" || direction === \"down\" ? `100vh` : \"100%\",\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(-90deg)\"\n          : direction === \"down\"\n          ? \"rotate(90deg)\"\n          : \"none\",\n    }),\n    [style, play, pauseOnHover, pauseOnClick, direction]\n  );\n\n  const gradientStyle = useMemo(\n    () => ({\n      [\"--gradient-color\" as string]: gradientColor,\n      [\"--gradient-width\" as string]:\n        typeof gradientWidth === \"number\"\n          ? `${gradientWidth}px`\n          : gradientWidth,\n    }),\n    [gradientColor, gradientWidth]\n  );\n\n  const marqueeStyle = useMemo(\n    () => ({\n      [\"--play\" as string]: play ? \"running\" : \"paused\",\n      [\"--direction\" as string]: direction === \"left\" ? \"normal\" : \"reverse\",\n      [\"--duration\" as string]: `${duration}s`,\n      [\"--delay\" as string]: `${delay}s`,\n      [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n      [\"--min-width\" as string]: autoFill ? `auto` : \"100%\",\n    }),\n    [play, direction, duration, delay, loop, autoFill]\n  );\n\n  const childStyle = useMemo(\n    () => ({\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(90deg)\"\n          : direction === \"down\"\n          ? \"rotate(-90deg)\"\n          : \"none\",\n    }),\n    [direction]\n  );\n\n  // Render {multiplier} number of children\n  const multiplyChildren = useCallback(\n    (multiplier: number) => {\n      return [\n        ...Array(\n          Number.isFinite(multiplier) && multiplier >= 0 ? multiplier : 0\n        ),\n      ].map((_, i) => (\n        <Fragment key={i}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </Fragment>\n      ));\n    },\n    [childStyle, children]\n  );\n\n  return !isMounted ? null : (\n    <div\n      ref={containerRef}\n      style={containerStyle}\n      className={\"rfm-marquee-container \" + className}\n    >\n      {gradient && <div style={gradientStyle} className=\"rfm-overlay\" />}\n      <div\n        className=\"rfm-marquee\"\n        style={marqueeStyle}\n        onAnimationIteration={onCycleComplete}\n        onAnimationEnd={onFinish}\n      >\n        <div className=\"rfm-initial-child-container\" ref={marqueeRef}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </div>\n        {multiplyChildren(multiplier - 1)}\n      </div>\n      <div className=\"rfm-marquee\" style={marqueeStyle}>\n        {multiplyChildren(multiplier)}\n      </div>\n    </div>\n  );\n});\n\nexport default Marquee;\n"],
  "mappings": "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",
  "names": ["forwardRef", "Marquee", "useState", "useRef", "useCallback", "containerWidth", "marqueeWidth", "useEffect", "useMemo", "multiplier", "React", "Fragment", "Children"]
}
